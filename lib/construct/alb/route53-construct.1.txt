import * as cdk from 'aws-cdk-lib';
import { Construct } from 'constructs';
import * as route53 from 'aws-cdk-lib/aws-route53';
import * as alb from 'aws-cdk-lib/aws-elasticloadbalancingv2';

type Route53ConstructProps = {
  domainName: string;
  albDnsName: string | undefined;
};

export class Route53Construct extends Construct {
  public readonly instanceProps: Route53ConstructProps;
  public readonly hostedZone: route53.IHostedZone;
  public readonly recordSet: route53.CfnRecordSet;

  constructor(scope: Construct, id: string, props: Route53ConstructProps) {
    super(scope, id);
    this.instanceProps = props;


    this.hostedZone = route53.HostedZone.fromLookup(this, 'HostedZone', {
      domainName: props.domainName,
    });

    // 断言 albDnsName 已定义
    const albDnsName = props.albDnsName as string;

    this.recordSet = new route53.CfnRecordSet(this, 'RecordSet', {
      hostedZoneId: this.hostedZone.hostedZoneId,
      name: props.domainName,
      type: route53.RecordType.A,
      aliasTarget: {
        dnsName: albDnsName,
        hostedZoneId: 'Z2VKXNR0QTI2OA',
        evaluateTargetHealth: false,
      },
    });

    cdk.Tags.of(this.recordSet).add('Name', `${props.domainName}-record`);
  }
}
